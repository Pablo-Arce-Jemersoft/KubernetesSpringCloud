version: "3.9"
services:
  mysql8:
    container_name: mysql8
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: msvc_usuarios
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always
    networks:
      - spring

  postgres14:
    container_name: postgres14
    image: postgres:14.9-alpine
    ports:
      - "5532:5432"
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: msvc_cursos
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring

  msvc-usuarios:
    container_name: msvc-usuarios
    image: pabloarcesoftwaredeveloper/usuarios:latest
#    image: usuarios_img:latest
#    build:
#      context: ./
#     dockerfile: ./msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    env_file: ./msvc-usuarios/.env
    networks:
      - spring
    depends_on:
      - mysql8
    restart: always

  msvc-cursos:
    container_name: msvc-cursos
    image: pabloarcesoftwaredeveloper/cursos:latest
#    image: cursos_img:latest
#    build:
#      context: ./
#      dockerfile: ./msvc-cursos/Dockerfile

    ports:
      - "8002:8002"
    env_file: ./msvc-cursos/.env
    networks:
      - spring
    depends_on:
      - postgres14
    restart: always

volumes:
  data-mysql:
    name: data-mysql
  data-postgres:
    name: data-postgres

networks:
  spring:
    name: spring
    external: true

# Define and run multi-container applications with Docker
# docker-compose up -d
# docker-compose down
# docker-compose stop
# docker-compose start
